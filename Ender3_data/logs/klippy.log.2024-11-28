Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/Ender3_data/config/printer.cfg', '-I', '/home/pi/Ender3_data/comms/klippy.serial', '-l', '/home/pi/Ender3_data/logs/klippy.log', '-a', '/home/pi/Ender3_data/comms/klippy.sock']
Git version: 'v0.12.0-379-gf2e69a370-dirty'
Untracked files: klippy/extras/gcode_shell_command.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core ?
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Thu Nov 28 12:17:24 2024 (1732817844.1 28.7)
===== Config file =====
[gcode_shell_command hello_world]
command = echo hello world
timeout = 2.
verbose = True

[gcode_macro HELLO_WORLD]
gcode = 
	RUN_SHELL_COMMAND CMD=hello_world

[virtual_sdcard]
path = /home/pi/Ender3_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
	{% set allow_park = False if not macro_found
	else False if client.park_at_cancel is not defined
	else True  if client.park_at_cancel|lower == 'true'
	else False %}
	{% set retract      = 5.0  if not macro_found else client.cancel_retract|default(5.0)|abs %}
	{% set sp_retract   = 2100 if not macro_found else client.speed_retract|default(35) * 60 %}
	
	{% if not printer.pause_resume.is_paused and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {% endif %}
	{% if printer.extruder.can_extrude %}
	M83
	G1 E-{retract} F{sp_retract}
	{% if printer.gcode_move.absolute_extrude %} M82 {% endif %}
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	TURN_OFF_HEATERS
	M106 S0
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	PAUSE_BASE
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
gcode = 
	
	{% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_fw_retract = False if not macro_found
	else False if client.use_fw_retract is not defined
	else True  if client.use_fw_retract|lower == 'true' and printer.firmware_retraction is defined
	else False %}
	{% set unretract      = 1.0  if not macro_found else client.unretract|default(1.0)|abs %}
	{% set sp_unretract   = 2100 if not macro_found else client.speed_unretract|default(35) * 60 %}
	{% set sp_move        = velocity if not macro_found else client.speed_move|default(velocity) %}
	
	{% if printer.extruder.can_extrude %}
	{% if use_fw_retract %}
	G11
	{% else %}
	M83
	G1 E{unretract} F{sp_unretract}
	{% if printer.gcode_move.absolute_extrude %} M82 {% endif %}
	{% endif %}
	{% else %}
	{action_respond_info("Extruder not hot enough %s" % use_fw_retract)}
	{% endif %}
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = False if not macro_found
	else False if client.use_custom_pos is not defined
	else True  if client.use_custom_pos|lower == 'true'
	else False %}
	{% set custom_park_x  = 0.0 if not macro_found else client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = 0.0 if not macro_found else client.custom_park_y|default(0.0) %}
	{% set park_dz        = 2.0 if not macro_found else client.custom_park_dz|default(2.0)|abs %}
	{% set use_fw_retract = False if not macro_found
	else False if client.use_fw_retract is not defined
	else True  if client.use_fw_retract|lower == 'true' and printer.firmware_retraction is defined
	else False %}
	{% set retract      = 1.0  if not macro_found else client.retract|default(1.0)|abs %}
	{% set sp_retract   = 2100 if not macro_found else client.speed_retract|default(35) * 60 %}
	{% set sp_hop       = 900  if not macro_found else client.speed_hop|default(15) * 60 %}
	{% set sp_move      = velocity * 60 if not macro_found else client.speed_move|default(velocity) * 60 %}
	
	{% set act = printer.toolhead.position %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set cone = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, max.z]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	{% if printer.extruder.can_extrude %}
	{% if use_fw_retract %}
	G10
	{% else %}
	M83
	G1 E-{retract} F{sp_retract}
	{% if printer.gcode_move.absolute_extrude %} M82 {% endif %}
	{% endif %}
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos = True
variable_custom_park_x = 230.0
variable_custom_park_y = 230.0
variable_custom_park_dz = 2.0
variable_retract = 1.0
variable_cancel_retract = 5.0
variable_speed_retract = 35.0
variable_unretract = 1.0
variable_speed_unretract = 35.0
variable_speed_hop = 15.0
variable_speed_move = 100.0
variable_park_at_cancel = True
variable_park_at_cancel_x = 230.0
variable_park_at_cancel_y = 230.0
variable_use_fw_retract = False
variable_idle_timeout = 3600
gcode = 

[respond]

[stepper_x]
step_pin = PC2
dir_pin = PB9
enable_pin = !PC3
microsteps = 16
rotation_distance = 40
endstop_pin = ^PA5
position_endstop = 0
position_max = 235
homing_speed = 80

[stepper_y]
step_pin = PB8
dir_pin = PB7
enable_pin = !PC3
microsteps = 16
rotation_distance = 40
endstop_pin = ^PA6
position_endstop = 0
position_max = 235
homing_speed = 80

[stepper_z]
step_pin = PB6
dir_pin = !PB5
enable_pin = !PC3
microsteps = 16
rotation_distance = 8
endstop_pin = probe:z_virtual_endstop
position_max = 250
position_min = -10
homing_speed = 4
second_homing_speed = 1
homing_retract_dist = 2.0

[extruder]
max_extrude_only_distance = 10000.0
step_pin = PB4
dir_pin = PB3
enable_pin = !PC3
microsteps = 16
rotation_distance = 32.473
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PA1
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC5
pressure_advance = .368
min_temp = 0
max_temp = 250
control = pid
pid_kp = 25.856
pid_ki = 1.674
pid_kd = 99.869

[safe_z_home]
home_xy_position = 115,115
speed = 150
z_hop = 10
z_hop_speed = 40

[bltouch]
sensor_pin = ^PB1
control_pin = PB0
probe_with_touch_mode = False
speed = 150
samples = 1
sample_retract_dist = 8.0
stow_on_each_sample = True
z_offset = 2.290

[bed_mesh]
speed = 120
mesh_min = 30,30
mesh_max = 189,189
probe_count = 5,5
fade_start = 1
fade_end = 10
fade_target = 0
algorithm = bicubic

[screws_tilt_adjust]
screw1 = 67, 42
screw1_name = front left screw
screw2 = 235, 42
screw2_name = front right screw
screw3 = 235, 212
screw3_name = rear right screw
screw4 = 67, 212
screw4_name = rear left screw
horizontal_move_z = 10
speed = 200
screw_thread = CW-M4

[bed_screws]
screw1 = 30,25
screw1_name = 1
screw2 = 200,25
screw2_name = 2
screw3 = 200,195
screw3_name = 3
screw4 = 30,195
screw4_name = 4

[heater_bed]
heater_pin = PA2
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC4
min_temp = 0
max_temp = 130
control = pid
pid_kp = 72.440
pid_ki = 1.416
pid_kd = 926.321

[fan]
pin = PA0

[fan_generic extruder_partfan]
pin = PC6

[heater_fan heater_partfan]
pin = PB14

[temperature_sensor RPI_Sensor]
sensor_type = temperature_host
sensor_path = /sys/class/thermal/thermal_zone0/temp

[mcu]
serial = /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.2:1.0-port0
restart_method = command

[printer]
kinematics = cartesian
max_velocity = 200
max_accel = 2000
max_z_velocity = 5
max_z_accel = 100

[gcode_arcs]
resolution = 1.0

[output_pin BEEPER_Pin]
pin = PB13
pwm = True
value = 0
shutdown_value = 0
cycle_time = 0.001
scale = 1

[gcode_macro Beeper]
gcode = 
	{% set S = params.S|default(1000)|int %}
	{% set P = params.P|default(100)|int %}
	{% set L = 0.5 %}
	{% if S <= 0 %}
	{% set F = 1 %}
	{% set L = 0 %}
	{% elif S >= 10000 %}
	{% set F = 0 %}
	{% else %}
	{% set F = 1/S %}
	{% endif %}
	SET_PIN PIN=BEEPER_Pin VALUE={L} CYCLE_TIME={F}
	G4 P{P}
	SET_PIN PIN=BEEPER_Pin VALUE=0

[gcode_macro bed_mesh_calibrate_and_save]
gcode = 
	G28
	bed_mesh_calibrate
	G1 X0 Y0 Z10 F4200

[exclude_object]

[gcode_macro object_exclusion]
gcode = 
	
	
	
	
	
	
	
	
	
	
	
	{% if 'exclude_object' not in printer %}
	{action_raise_error("[exclude_object] is not enabled")}
	{% endif %}
	
	{% if 'T' in params %}
	EXCLUDE_OBJECT RESET=1
	
	{% for i in range(params.T | int) %}
	EXCLUDE_OBJECT_DEFINE NAME={i}
	{% endfor %}
	{% endif %}
	
	{% if 'C' in params %}
	EXCLUDE_OBJECT CURRENT=1
	{% endif %}
	
	{% if 'P' in params %}
	EXCLUDE_OBJECT NAME={params.P}
	{% endif %}
	
	{% if 'S' in params %}
	{% if params.S == '-1' %}
	{% if printer.exclude_object.current_object %}
	EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
	{% endif %}
	{% else %}
	EXCLUDE_OBJECT_START NAME={params.S}
	{% endif %}
	{% endif %}
	
	{% if 'U' in params %}
	EXCLUDE_OBJECT RESET=1 NAME={params.U}
	{% endif %}

[gcode_macro START_PRINT]
gcode = 
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
	
	
	M140 S{BED_TEMP}
	
	G90
	G28
	G1 Z2.0 F3000
	G1 X0.1 Y20 Z30 F5000.0
	BED_MESH_PROFILE LOAD=default
	
	M190 S{BED_TEMP}
	
	M109 S{EXTRUDER_TEMP}
	G92 E0
	G1 Z0.3
	G1 X0.1 Y200.0 Z0.3 F1500.0 E15
	G1 X0.4 Y200.0 Z0.3 F5000.0
	G1 X0.4 Y20 Z0.3 F1500.0 E30
	G92 E0
	G1 Z2.0 F3000
	G1 X5 Y20 Z0.3 F5000.0

[gcode_macro END_PRINT]
gcode = 
	
	M140 S0
	M104 S0
	M106 S0
	
	G91
	
	G1 X-2 Y-2 F300
	
	G1 Z10 F3000
	G90
	G1 X230 Y230 F3000
	
	M84
	
	M117 Print Completed

[gcode_macro Move_Get_out_the_way]
gcode = 
	G1 X230 Y230 F3000

[gcode_macro clean_nozzle]
gcode = 
	{% set wipe_count = 8 %}
	SAVE_GCODE_STATE NAME=clean_nozzle_state
	G90
	G0 Z15 F300
	{% for wipe in range(wipe_count) %}
	{% for coordinate in [(235, 4),(235, 4)] %}
	G0 X{coordinate[0]} Y{coordinate[1] + 0.25 * wipe} Z9.7 F12000
	{% endfor %}
	{% endfor %}
	RESTORE_GCODE_STATE NAME=clean_nozzle_state

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{'enable':True, 'call':params.MACRO|default("PAUSE")}}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% if params.LAYER is defined %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{'enable': True, 'layer':params.LAYER|int, 'call':params.MACRO|default("PAUSE")}}"
	{% else %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{'enable': False, 'layer':0, 'call':"PAUSE"}}"
	{% endif %}

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = {'enable':False, 'call':"PAUSE"}
variable_pause_at_layer = {'enable':False, 'layer':0, 'call':"PAUSE"}
gcode = 
	{% if pause_next_layer.enable %}
	{action_respond_info("%s, forced by pause_next_layer" % pause_next_layer.call)}
	{pause_next_layer.call}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{'enable': False, 'call':"PAUSE"}}"
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	{action_respond_info("%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer))}
	{pause_at_layer.call}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{'enable': False, 'layer': 0, 'call':"PAUSE"}}"
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro Z_AXIS_CALIBRATE]
gcode = 
	G28
	PROBE_CALIBRATE

[gcode_macro ADJUST_BED_SCREWS]
gcode = 
	G28
	BED_SCREWS_ADJUST

[gcode_macro PID]
gcode = 
	G28
	PID_CALIBRATE HEATER=extruder TARGET=200
	PID_CALIBRATE HEATER=heater_bed TARGET=60

[gcode_macro Press_Advance_short]
gcode = 
	SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
	TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.005

[gcode_macro Press_Advance_long]
gcode = 
	SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
	TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.020

[gcode_macro M600]
gcode = 
	{% set X = params.X|default(50)|float %}
	{% set Y = params.Y|default(0)|float %}
	{% set Z = params.Z|default(10)|float %}
	SAVE_GCODE_STATE NAME=M600_state
	PAUSE
	G91
	G1 E-.8 F2700
	G1 Z{Z}
	G90
	G1 X{X} Y{Y} F3000
	G91
	G1 E-50 F1000
	RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro update_git]
gcode = 
	RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command = bash /home/pi/klipper-backup/script.sh
timeout = 90.0
verbose = True

[gcode_macro TEST_SPEED]
description = Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	M400
	G28
	
	{% if printer.configfile.settings.quad_gantry_level %}
	{% if printer.quad_gantry_level.applied == False %}
	QUAD_GANTRY_LEVEL
	G28 Z
	{% endif %}
	{% endif %}
	
	G90
	G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
	M400
	G28 X Y
	G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
	G4 P1000
	GET_POSITION
	
	
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}
	
	
	{% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
	{% else %}
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	{% endif %}
	
	{% for i in range(iterations) %}
	
	G0 X{x_min} Y{y_min} F{speed*60}
	G0 X{x_max} Y{y_max} F{speed*60}
	G0 X{x_min} Y{y_min} F{speed*60}
	G0 X{x_max} Y{y_min} F{speed*60}
	G0 X{x_min} Y{y_max} F{speed*60}
	G0 X{x_max} Y{y_min} F{speed*60}
	
	
	G0 X{x_min} Y{y_min} F{speed*60}
	G0 X{x_min} Y{y_max} F{speed*60}
	G0 X{x_max} Y{y_max} F{speed*60}
	G0 X{x_max} Y{y_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	{% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	{% else %}
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
	{% endif %}
	
	
	M400
	G28
	
	G90
	G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
	G4 P1000
	GET_POSITION
	
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED

[bed_mesh default]
version = 1
points = 
	0.002500, 0.047500, 0.022500, 0.032500, 0.072500
	-0.017500, -0.020000, -0.030000, -0.035000, -0.007500
	-0.065000, -0.050000, -0.050000, -0.037500, -0.007500
	-0.002500, -0.017500, -0.017500, -0.017500, 0.040000
	0.020000, 0.027500, 0.050000, 0.015000, 0.090000
x_count = 5
y_count = 5
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 30.0
max_x = 189.0
min_y = 30.0
max_y = 189.0
=======================
Extruder max_extrude_ratio=0.266081
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.2:1.0-port0: [Errno 2] No such file or directory: '/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.2:1.0-port0'
webhooks client 4127891496: New connection
webhooks client 4127891496: Client info {'program': 'Moonraker', 'version': 'v0.9.3-3-gccfe32f'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.2:1.0-port0: [Errno 2] No such file or directory: '/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.2:1.0-port0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.2:1.0-port0: [Errno 2] No such file or directory: '/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.2:1.0-port0'
